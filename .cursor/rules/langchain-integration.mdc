---
globs: src/services/langchainService.ts
description: "Интеграция с LangChain и OpenAI"
---

# Интеграция с LangChain

## Инициализация:
- Используйте статические методы для инициализации сервиса
- Проверяйте наличие API ключей в переменных окружения
- Настройте модель с подходящими параметрами (temperature: 0.3 для стабильности)

## Парсинг документов:
- Конвертируйте Excel в текстовый формат перед отправкой в LLM
- Используйте JsonOutputParser для структурированного вывода
- Создавайте детальные промпты с примерами и инструкциями

## Обработка ошибок:
- Обрабатывайте ошибки конвертации Excel файлов
- Логируйте ошибки парсинга
- Предоставляйте понятные сообщения об ошибках

## Промпты:
- Используйте ChatPromptTemplate для структурированных промптов
- Включайте format_instructions для JSON вывода
- Добавляйте примеры и контекст в промпты

## Нормализация данных:
- Создавайте отдельные методы для нормализации дат и других данных
- Используйте LLM для конвертации форматов данных
- Возвращайте только необходимые данные без дополнительных комментариев

## Пример структуры:
```typescript
export class LangChainService {
  private static model: ChatOpenAI;
  
  static initialize() { /* инициализация */ }
  static async parseInvoice(fileBuffer: FileBuffer) { /* парсинг */ }
  static async normalizeDate(rawDate: string) { /* нормализация */ }
}
```